<!DOCTYPE html>
<html lang="pt-br">
<head>
  <meta charset="UTF-8" />
  <title>EchoNet - Feed</title>
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <link rel="stylesheet" href="/css/global.css">
  <link rel="stylesheet" href="/css/navbar.css">
  <link rel="stylesheet" href="/css/sidebar.css">
  <link rel="stylesheet" href="/css/feed.css">
  <link rel="stylesheet" href="/css/modal.css">
  <link rel="stylesheet" href="/css/responsive.css">
  <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@400;600&display=swap" rel="stylesheet" />
</head>
<body>
  <!-- Sidebar -->
  <div class="sidebar">
    <div class="logo">EchoNet</div>
    <nav>
      <a href="/">PÃ¡gina Inicial</a>
      <a href="/perfil">Perfil</a>
      <a href="#" id="abrirModal">Criar</a>
      <a href="/logout">Sair</a>
    </nav>
  </div>

  <!-- Feed -->
  <main class="main-feed">
    <div class="feed" id="feedContainer">
      <h2>OlÃ¡, <span id="username"><%= username %></span> ðŸ‘‹</h2>

      <% if (posts.length === 0) { %>
        <p style="text-align: center; color: #ccc; margin-top: 40px;">
          Nenhuma publicaÃ§Ã£o ainda. Seja o primeiro a postar!
        </p>
      <% } else { %>
        <% posts.forEach(post => { %>
          <div class="post-card">
            <div class="post-header">
              <span>@<%= post.usuario %></span>
            </div>
            <div class="post-image">
              <img src="<%= post.imagem %>" alt="Postagem" />
            </div>
            <div class="post-footer">
              <div class="caption"><%= post.legenda %></div>
            </div>
          </div>
        <% }) %>
      <% } %>
    </div>
  </main>

  <!-- Barra de usuÃ¡rios online -->
  <aside class="barra-online">
    <h3>Contatos</h3>
    <ul id="usuariosOnline">
      <!-- Lista serÃ¡ preenchida dinamicamente -->
    </ul>
  </aside>

  <!-- Modal de Postagem -->
  <div id="modalCriar" class="modal">
    <div class="modal-conteudo estilizado">
      <span class="fechar" id="fecharModal">&times;</span>
      <h3>Criar nova publicaÃ§Ã£o</h3>
      <form id="formPostagem" enctype="multipart/form-data">
        <label class="upload-area" for="uploadInput">
          <span class="upload-text">Clique para selecionar uma imagem</span>
          <img id="previewImagem" src="" alt="Preview" class="preview" />
          <input type="file" name="imagem" id="uploadInput" accept="image/*" hidden required />
        </label>
        <textarea name="legenda" placeholder="Escreva uma legenda..." required></textarea>
        <button type="submit">Compartilhar</button>
      </form>
    </div>
  </div>

  <script>
    // Controle do Modal
    const modal = document.getElementById("modalCriar");
    document.getElementById("abrirModal").onclick = () => {
      modal.style.display = "block";
      document.querySelector(".upload-text").style.display = "block";
      document.getElementById("previewImagem").style.display = "none";
      document.getElementById("previewImagem").src = "";
    };
    document.getElementById("fecharModal").onclick = () => modal.style.display = "none";
    window.onclick = e => { if (e.target === modal) modal.style.display = "none"; };

    // PrÃ©-visualizaÃ§Ã£o de Imagem
    const uploadInput = document.getElementById("uploadInput");
    const preview = document.getElementById("previewImagem");
    uploadInput.onchange = e => {
      const file = e.target.files[0];
      if (!file) return;
      const reader = new FileReader();
      reader.onload = () => {
        preview.src = reader.result;
        preview.style.display = "block";
        document.querySelector(".upload-text").style.display = "none";
      };
      reader.readAsDataURL(file);
    };

    // SubmissÃ£o via Ajax â€” com reload automÃ¡tico
    const form = document.getElementById("formPostagem");
    form.addEventListener("submit", async e => {
      e.preventDefault();
      const data = new FormData(form);
      const res = await fetch("/postar", {
        method: "POST",
        body: data,
        credentials: "include"
      });
      if (!res.ok) {
        alert("Erro ao postar!");
        return;
      }
      window.location.reload();
      modal.style.display = "none";
      form.reset();
    });

    // Atualiza ultimo_ativo a cada 30s (mantÃ©m o usuÃ¡rio online)
    setInterval(() => {
      fetch("/atualizar-ativo", {
        method: "POST",
        credentials: "include"
      });
    }, 30000);

    // Carrega lista de usuÃ¡rios online/away/offline
    function carregarUsuariosOnline() {
      fetch("/online-users", {
        credentials: "include"
      })
        .then(res => res.json())
        .then(lista => {
          const ul = document.getElementById("usuariosOnline");
          ul.innerHTML = "";
          lista.forEach(usuario => {
            const li = document.createElement("li");
            li.innerHTML = `<span class="dot-status ${usuario.status}"></span> ${usuario.username}`;
            ul.appendChild(li);
          });
        });
    }

    setInterval(carregarUsuariosOnline, 10000);
    carregarUsuariosOnline();
  </script>
</body>
</html>